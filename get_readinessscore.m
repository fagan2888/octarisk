%# Copyright (C) 2019 Stefan Schl√∂gl <schinzilord@octarisk.com>
%#
%# This program is free software; you can redistribute it and/or modify it under
%# the terms of the GNU General Public License as published by the Free Software
%# Foundation; either version 3 of the License, or (at your option) any later
%# version.
%#
%# This program is distributed in the hope that it will be useful, but WITHOUT
%# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
%# FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
%# details.
%#
%# You should have received a copy of the GNU General Public License along with
%# this program; if not, see <http://www.gnu.org/licenses/>.
 
%# -*- texinfo -*-
%# @deftypefn {Function File} {[@var{score} ] =} get_readinessscore(@var{isocode})
%#
%# Map the ISO-2 currency code to ND-GAIN readiness risk score.
%# See https://gain.nd.edu/our-work/country-index/methodology/ for further information.
%# @end deftypefn

function score = get_readinessscore(isocode)

if nargin < 1
    error('get_readinessscore: no country iso code provided.\n');
end

if nargin > 1
    fprintf('get_readinessscore: ignoring further argument(s).\n');
end
if ~(ischar(isocode))
    error('get_readinessscore: isocode not a string >>%s<<..\n',any2str(isocode));
end

% dictionary with all iso codes and their mapping to the INFORM risk score:

% manual update: map Hong Kong (HK) and Taiwan (TW) to China (CN)
if strcmpi(isocode,'TW') || strcmpi(isocode,'HK')
	isocode = 'CN';
end

% last update from https://gain.nd.edu/our-work/country-index/rankings/ 20190831
inform = struct(   ...
                'AF',0.22, ...
				'AL',0.44, ...
				'DZ',0.28, ...
				'AO',0.23, ...
				'AG',0.44, ...
				'AR',0.41, ...
				'AM',0.49, ...
				'AU',0.71, ...
				'AT',0.72, ...
				'AZ',0.43, ...
				'BS',0.43, ...
				'BH',0.43, ...
				'BD',0.25, ...
				'BB',0.47, ...
				'BY',0.49, ...
				'BE',0.6, ...
				'BZ',0.32, ...
				'BJ',0.29, ...
				'BT',0.42, ...
				'BO',0.27, ...
				'BA',0.36, ...
				'BW',0.43, ...
				'BR',0.39, ...
				'BN',0.51, ...
				'BG',0.48, ...
				'BF',0.28, ...
				'BI',0.23, ...
				'KH',0.3, ...
				'CM',0.27, ...
				'CA',0.67, ...
				'CV',0.45, ...
				'CF',0.13, ...
				'TD',0.16, ...
				'CL',0.57, ...
				'CN',0.47, ...
				'CO',0.4, ...
				'KM',0.26, ...
				'CG',0.21, ...
				'CD',0.18, ...
				'CR',0.46, ...
				'CI',0.27, ...
				'HR',0.51, ...
				'CU',0.34, ...
				'CY',0.52, ...
				'CZ',0.58, ...
				'DK',0.76, ...
				'DJ',0.28, ...
				'DM',0.54, ...
				'DO',0.38, ...
				'EC',0.34, ...
				'EG',0.35, ...
				'SV',0.35, ...
				'GQ',0.2, ...
				'ER',0.12, ...
				'EE',0.62, ...
				'ET',0.27, ...
				'FJ',0.43, ...
				'FI',0.75, ...
				'FR',0.63, ...
				'GA',0.29, ...
				'GM',0.31, ...
				'GE',0.56, ...
				'DE',0.68, ...
				'GH',0.37, ...
				'GR',0.52, ...
				'GD',0.52, ...
				'GT',0.32, ...
				'GN',0.28, ...
				'GW',0.27, ...
				'GY',0.33, ...
				'HT',0.18, ...
				'HN',0.29, ...
				'HU',0.53, ...
				'IS',0.7, ...
				'IN',0.35, ...
				'ID',0.36, ...
				'IR',0.4, ...
				'IQ',0.23, ...
				'IE',0.64, ...
				'IL',0.56, ...
				'IT',0.53, ...
				'JM',0.41, ...
				'JP',0.67, ...
				'JO',0.37, ...
				'KZ',0.49, ...
				'KE',0.28, ...
				'KI',0.42, ...
				'KP',0.2, ...
				'KR',0.72, ...
				'KW',0.44, ...
				'KG',0.39, ...
				'LA',0.32, ...
				'LV',0.61, ...
				'LB',0.31, ...
				'LS',0.31, ...
				'LR',0.26, ...
				'LY',0.2, ...
				'LI',0.65, ...
				'LT',0.61, ...
				'LU',0.66, ...
				'MK',0.47, ...
				'MG',0.24, ...
				'MW',0.26, ...
				'MY',0.52, ...
				'MV',0.37, ...
				'ML',0.28, ...
				'MT',0.49, ...
				'MH',0.36, ...
				'MR',0.29, ...
				'MU',0.55, ...
				'MX',0.4, ...
				'FM',0.37, ...
				'MD',0.43, ...
				'MC',0.77, ...
				'MN',0.46, ...
				'ME',0.46, ...
				'MA',0.39, ...
				'MZ',0.25, ...
				'MM',0.24, ...
				'NA',0.41, ...
				'NR',0.41, ...
				'NP',0.31, ...
				'NL',0.68, ...
				'NZ',0.8, ...
				'NI',0.3, ...
				'NE',0.29, ...
				'NG',0.24, ...
				'NO',0.8, ...
				'OM',0.51, ...
				'PK',0.29, ...
				'PW',0.42, ...
				'PA',0.42, ...
				'PG',0.28, ...
				'PY',0.34, ...
				'PE',0.44, ...
				'PH',0.32, ...
				'PL',0.59, ...
				'PT',0.58, ...
				'QA',0.44, ...
				'RO',0.47, ...
				'RU',0.51, ...
				'RW',0.41, ...
				'KN',0.49, ...
				'LC',0.45, ...
				'VC',0.49, ...
				'WS',0.41, ...
				'SM',0.53, ...
				'ST',0.33, ...
				'SA',0.47, ...
				'SN',0.33, ...
				'RS',0.44, ...
				'SC',0.44, ...
				'SL',0.31, ...
				'SG',0.8, ...
				'SK',0.53, ...
				'SI',0.65, ...
				'SB',0.42, ...
				'SO',0.08, ...
				'ZA',0.4, ...
				'ES',0.56, ...
				'LK',0.4, ...
				'SD',0.23, ...
				'SR',0.3, ...
				'SZ',0.35, ...
				'SE',0.73, ...
				'CH',0.69, ...
				'SY',0.22, ...
				'TJ',0.29, ...
				'TZ',0.29, ...
				'TH',0.48, ...
				'TL',0.38, ...
				'TG',0.3, ...
				'TO',0.4, ...
				'TT',0.38, ...
				'TN',0.39, ...
				'TR',0.47, ...
				'TM',0.23, ...
				'TV',0.55, ...
				'UG',0.3, ...
				'UA',0.41, ...
				'AE',0.56, ...
				'GB',0.68, ...
				'US',0.7, ...
				'UY',0.47, ...
				'UZ',0.33, ...
				'VU',0.36, ...
				'VE',0.19, ...
				'VN',0.41, ...
				'YE',0.22, ...
				'ZM',0.32, ...
				'ZW',0.21 ...
            );
                       
if ~(isfield(inform,upper(isocode)))
    error('get_readinessscore: no valid country iso code >>%s<< provided.\n',isocode);
end                       
% map the string to the number 1:length(dcc_cell):
score = getfield(inform,upper(isocode));
end 

