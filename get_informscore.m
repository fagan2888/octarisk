%# Copyright (C) 2019 Stefan Schl√∂gl <schinzilord@octarisk.com>
%#
%# This program is free software; you can redistribute it and/or modify it under
%# the terms of the GNU General Public License as published by the Free Software
%# Foundation; either version 3 of the License, or (at your option) any later
%# version.
%#
%# This program is distributed in the hope that it will be useful, but WITHOUT
%# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
%# FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
%# details.
%#
%# You should have received a copy of the GNU General Public License along with
%# this program; if not, see <http://www.gnu.org/licenses/>.
 
%# -*- texinfo -*-
%# @deftypefn {Function File} {[@var{score} ] =} get_informscore(@var{isocode})
%#
%# Map the ISO-2 currency code to INFORM risk score.
%# See http://www.inform-index.org/ for further information.
%# Basic idea: if absolute needs (food, shelter, political stability, natural
%# desaster recovery) is not given, financial investments have to be closely
%# monitored. INFORM risk score delivers this classification in a condensed
%# way. 
%# @end deftypefn

function score = get_informscore(isocode)

if nargin < 1
    error('get_informscore: no country iso code provided.\n');
end

if nargin > 1
    fprintf('get_informscore: ignoring further argument(s).\n');
end
if ~(ischar(isocode))
    error('get_informscore: isocode not a string >>%s<<..\n',any2str(isocode));
end

% dictionary with all iso codes and their mapping to the INFORM risk score:

% manual update: map Hong Kong (HK) and Taiwan (TW) to China (CN)
if strcmpi(isocode,'TW') || strcmpi(isocode,'HK')
	isocode = 'CN';
end

% last update from INFORM_GRI_MID_2019_v037
inform = struct(   ...
                'AF',7.8, ...
				'AL',2.8, ...
				'DZ',4.4, ...
				'AO',4.9, ...
				'AG',2.3, ...
				'AR',2.6, ...
				'AM',3.5, ...
				'AU',2.3, ...
				'AT',1.6, ...
				'AZ',4.7, ...
				'BS',2.2, ...
				'BH',0.9, ...
				'BD',6, ...
				'BB',1.7, ...
				'BY',2.2, ...
				'BE',2.2, ...
				'BZ',3.4, ...
				'BJ',4.1, ...
				'BT',3, ...
				'BO',4.2, ...
				'BA',3.7, ...
				'BW',2.9, ...
				'BR',3.8, ...
				'BN',1.9, ...
				'BG',2.4, ...
				'BF',5.1, ...
				'BI',6, ...
				'CV',2.4, ...
				'KH',4.8, ...
				'CM',5.7, ...
				'CA',2.4, ...
				'CF',8.5, ...
				'TD',7.2, ...
				'CL',2.9, ...
				'CN',4.4, ...
				'CO',5.5, ...
				'KM',3.7, ...
				'CG',5.5, ...
				'CD',7.6, ...
				'CR',2.9, ...
				'CI',5.6, ...
				'HR',2.2, ...
				'CU',3.3, ...
				'CY',2.7, ...
				'CZ',1.4, ...
				'DK',1.1, ...
				'DJ',5.4, ...
				'DM',3.4, ...
				'DO',3.9, ...
				'EC',4.2, ...
				'EG',4.8, ...
				'SV',4.1, ...
				'GQ',3.9, ...
				'ER',5.2, ...
				'EE',1, ...
				'ET',6.8, ...
				'FJ',3, ...
				'FI',0.6, ...
				'FR',2.5, ...
				'GA',4.5, ...
				'GM',4.2, ...
				'GE',3.8, ...
				'DE',2.1, ...
				'GH',3.9, ...
				'GR',2.9, ...
				'GD',1.4, ...
				'GT',5.5, ...
				'GN',5.2, ...
				'GW',5.4, ...
				'GY',3.1, ...
				'HT',6.5, ...
				'HN',5, ...
				'HU',2, ...
				'IS',1.1, ...
				'IN',5.5, ...
				'ID',4.7, ...
				'IR',4.9, ...
				'IQ',7.2, ...
				'IE',1.5, ...
				'IL',2.6, ...
				'IT',2.7, ...
				'JM',2.6, ...
				'JP',2, ...
				'JO',4.1, ...
				'KZ',2.2, ...
				'KE',6.1, ...
				'KI',3.9, ...
				'KP',4.7, ...
				'KR',1.6, ...
				'KW',2, ...
				'KG',3.8, ...
				'LA',4.2, ...
				'LV',1.6, ...
				'LB',5.3, ...
				'LS',4.6, ...
				'LR',5.2, ...
				'LY',6.1, ...
				'LI',0.9, ...
				'LT',1.4, ...
				'LU',0.8, ...
				'MG',5.1, ...
				'MW',4.6, ...
				'MY',3.2, ...
				'MV',2.4, ...
				'ML',6.4, ...
				'MT',1.9, ...
				'MH',4.6, ...
				'MR',6.2, ...
				'MU',2.1, ...
				'MX',5.1, ...
				'FM',4.4, ...
				'MD',2.7, ...
				'MN',3.4, ...
				'ME',2.3, ...
				'MA',4.2, ...
				'MZ',6, ...
				'MM',6.6, ...
				'NA',3.9, ...
				'NR',3.3, ...
				'NP',5, ...
				'NL',1.4, ...
				'NZ',1.8, ...
				'NI',4.4, ...
				'NE',6.7, ...
				'NG',6.8, ...
				'NO',0.7, ...
				'OM',2.8, ...
				'PK',6.2, ...
				'PW',2.8, ...
				'PS',4, ...
				'PA',3.1, ...
				'PG',5.6, ...
				'PY',2.7, ...
				'PE',4.3, ...
				'PH',5.5, ...
				'PL',1.8, ...
				'PT',1.7, ...
				'QA',1.4, ...
				'RO',2.9, ...
				'RU',4.3, ...
				'RW',5, ...
				'KN',1.6, ...
				'LC',1.9, ...
				'VC',1.7, ...
				'WS',2.8, ...
				'ST',1.7, ...
				'SA',2.3, ...
				'SN',4.7, ...
				'RS',3.5, ...
				'SC',2.1, ...
				'SL',5.3, ...
				'SG',0.4, ...
				'SK',1.7, ...
				'SI',1.4, ...
				'SB',4.9, ...
				'SO',9.1, ...
				'ZA',4.7, ...
				'SS',8.9, ...
				'ES',2.2, ...
				'LK',3.6, ...
				'SD',7.1, ...
				'SR',3, ...
				'SZ',3.3, ...
				'SE',1.4, ...
				'CH',1.3, ...
				'SY',7.1, ...
				'TJ',4.5, ...
				'TZ',5.6, ...
				'TH',4.1, ...
				'MK',3, ...
				'TL',4.6, ...
				'TG',4.4, ...
				'TO',3.6, ...
				'TT',1.9, ...
				'TN',3.2, ...
				'TR',4.9, ...
				'TM',3.4, ...
				'TV',3.4, ...
				'UG',6.3, ...
				'UA',5.2, ...
				'AE',2, ...
				'GB',2, ...
				'US',3.4, ...
				'UY',1.5, ...
				'UZ',3.4, ...
				'VU',4.1, ...
				'VE',4.5, ...
				'VN',3.8, ...
				'YE',7.8, ...
				'ZM',4.1, ...
				'ZW',5.2 ...
            );
                       
if ~(isfield(inform,upper(isocode)))
    error('get_informscore: no valid country iso code >>%s<< provided.\n',isocode);
end                       
% map the string to the number 1:length(dcc_cell):
score = getfield(inform,upper(isocode));
end 


%!assert(get_informscore('DE'),2.1)
